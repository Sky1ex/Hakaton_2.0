import { INDICATORS_CONFIG } from '../constants';

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ
 */
export const formatValue = (value: number): string => {
  if (value === 0) return '-';
  if (Number.isInteger(value)) {
    return value.toString();
  }
  return value.toFixed(2).replace('.', ',');
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è –ø–æ –∏–Ω–¥–µ–∫—Å—É
 */
export const getIndicatorName = (indicator: any, index: number): string => {
  // –ï—Å–ª–∏ —É –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å–µ–∫—Ü–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
  if (indicator.section.length > 0 && indicator.section[0].name) {
    return indicator.section[0].name;
  }
  
  // –ò–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
  return INDICATORS_CONFIG.DEFAULT_INDICATOR_NAMES[index] || `–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å ${index + 1}`;
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL –≤–µ–±-—Ä–µ—Å—É—Ä—Å–æ–º
 */
export const isWebResource = (url: string): boolean => {
  return url.startsWith('http://') || url.startsWith('https://');
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ —Ä–µ—Å—É—Ä—Å–∞
 */
export const getResourceIcon = (url: string): string => {
  if (isWebResource(url)) {
    return 'üåê';
  }
  return 'üìÑ';
};

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ä–∞–π–æ–Ω –∏–∑ –ø–æ–ª–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
 */
export const extractDistrict = (fullAddress: string): string => {
  return fullAddress.split(',')[1]?.trim() || '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω';
};

/**
 * –°–æ–∑–¥–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å–µ–∫—Ü–∏–π
 */
export const createSectionHeaders = (maxSections: number): string[] => {
  return Array.from({ length: maxSections }, (_, i) => `–°–µ–∫—Ü–∏—è ‚Ññ${i + 1}`);
};
